{"ast":null,"code":"import * as actionTypes from './actionTypes';\nimport api from '../../api/guess';\nexport const fetchResultsByDaysWonSuccess = daysWon => {\n  return {\n    type: actionTypes.FETCH_RESULTS_BY_DAYS_WON_SUCCESS,\n    daysWon: daysWon\n  };\n};\nexport const fetchResultsByDaysWonFail = error => {\n  return {\n    type: actionTypes.FETCH_RESULTS_BY_DAYS_WON_FAIL,\n    error: error\n  };\n};\nexport const fetchResultsByDaysWonStart = () => {\n  return {\n    type: actionTypes.FETCH_RESULTS_BY_DAYS_WON_START\n  };\n};\nexport function fetchResultsByDaysWon() {\n  return dispatch => {\n    dispatch(fetchResultsByDaysWonStart()); //const queryParms = '?auth=' + token;\n\n    api.getResultsByDaysWon().then(response => {\n      dispatch(fetchResultsByDaysWonSuccess(response.data.daysWon));\n    }).catch(err => {\n      dispatch(fetchResultsByDaysWonFail(err));\n    });\n  };\n}\n;\nexport const fetchResultsSuccess = results => {\n  return {\n    type: actionTypes.FETCH_RESULTS_SUCCESS,\n    results: results\n  };\n};\nexport const fetchResultsFail = error => {\n  return {\n    type: actionTypes.FETCH_RESULTS_FAIL,\n    error: error\n  };\n};\nexport const fetchResultsStart = () => {\n  return {\n    type: actionTypes.FETCH_RESULTS_START\n  };\n};\nexport function fetchResults(numResultsToFetch) {\n  return dispatch => {\n    dispatch(fetchResultsStart()); //const queryParms = '?auth=' + token;\n\n    api.getResultsList(numResultsToFetch).then(response => {\n      dispatch(fetchResultsSuccess(response.data));\n    }).catch(err => {\n      dispatch(fetchResultsFail(err));\n    });\n  };\n}\n;\nexport const fetchUserSubmittedNextGuessSuccess = submitted => {\n  return {\n    type: actionTypes.FETCH_USER_SUBMITTED_NEXT_GUESS_SUCCESS,\n    nextGuessSubmitted: submitted\n  };\n};\nexport const fetchUserSubmittedNextGuessFail = error => {\n  return {\n    type: actionTypes.FETCH_USER_SUBMITTED_NEXT_GUESS_FAIL,\n    error: error\n  };\n};\nexport const fetchUserSubmittedNextGuessStart = () => {\n  return {\n    type: actionTypes.FETCH_USER_SUBMITTED_NEXT_GUESS_START\n  };\n};\nexport function fetchUserSubmittedNextGuess(userName) {\n  return dispatch => {\n    dispatch(fetchUserSubmittedNextGuessStart()); //const queryParms = '?auth=' + token;\n\n    api.hasUserSubmittedNextGuess(userName).then(response => {\n      dispatch(fetchUserSubmittedNextGuessSuccess(response.data.submitted));\n    }).catch(err => {\n      dispatch(fetchUserSubmittedNextGuessFail(err));\n    });\n  };\n}\n;","map":{"version":3,"sources":["/Users/rhyswaters/repos/KovidR.UI/src/store/actions/guess.js"],"names":["actionTypes","api","fetchResultsByDaysWonSuccess","daysWon","type","FETCH_RESULTS_BY_DAYS_WON_SUCCESS","fetchResultsByDaysWonFail","error","FETCH_RESULTS_BY_DAYS_WON_FAIL","fetchResultsByDaysWonStart","FETCH_RESULTS_BY_DAYS_WON_START","fetchResultsByDaysWon","dispatch","getResultsByDaysWon","then","response","data","catch","err","fetchResultsSuccess","results","FETCH_RESULTS_SUCCESS","fetchResultsFail","FETCH_RESULTS_FAIL","fetchResultsStart","FETCH_RESULTS_START","fetchResults","numResultsToFetch","getResultsList","fetchUserSubmittedNextGuessSuccess","submitted","FETCH_USER_SUBMITTED_NEXT_GUESS_SUCCESS","nextGuessSubmitted","fetchUserSubmittedNextGuessFail","FETCH_USER_SUBMITTED_NEXT_GUESS_FAIL","fetchUserSubmittedNextGuessStart","FETCH_USER_SUBMITTED_NEXT_GUESS_START","fetchUserSubmittedNextGuess","userName","hasUserSubmittedNextGuess"],"mappings":"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","sourcesContent":["import * as actionTypes from './actionTypes';\nimport api from '../../api/guess';\n\nexport const fetchResultsByDaysWonSuccess = (daysWon) => {\n    return {\n        type: actionTypes.FETCH_RESULTS_BY_DAYS_WON_SUCCESS,\n        daysWon: daysWon\n    }\n};\n\nexport const fetchResultsByDaysWonFail = (error) => {\n    return {\n        type: actionTypes.FETCH_RESULTS_BY_DAYS_WON_FAIL,\n        error: error\n    }\n};\n\nexport const fetchResultsByDaysWonStart = () => {\n    return {\n        type: actionTypes.FETCH_RESULTS_BY_DAYS_WON_START\n    }\n};\n\nexport function fetchResultsByDaysWon(){\n    return dispatch => {\n        dispatch(fetchResultsByDaysWonStart());\n        //const queryParms = '?auth=' + token;\n        api.getResultsByDaysWon().then(response => {\n            dispatch(fetchResultsByDaysWonSuccess(response.data.daysWon));\n        }).catch(err => {\n            dispatch(fetchResultsByDaysWonFail(err));\n        });\n    };\n};\n\nexport const fetchResultsSuccess = (results) => {\n    return {\n        type: actionTypes.FETCH_RESULTS_SUCCESS,\n        results: results\n    }\n};\n\nexport const fetchResultsFail = (error) => {\n    return {\n        type: actionTypes.FETCH_RESULTS_FAIL,\n        error: error\n    }\n};\n\nexport const fetchResultsStart = () => {\n    return {\n        type: actionTypes.FETCH_RESULTS_START\n    }\n};\n\nexport function fetchResults(numResultsToFetch){\n    return dispatch => {\n        dispatch(fetchResultsStart());\n        //const queryParms = '?auth=' + token;\n        api.getResultsList(numResultsToFetch).then(response => {\n            dispatch(fetchResultsSuccess(response.data));\n        }).catch(err => {\n            dispatch(fetchResultsFail(err));\n        });\n    };\n};\n\nexport const fetchUserSubmittedNextGuessSuccess = (submitted) => {\n    return {\n        type: actionTypes.FETCH_USER_SUBMITTED_NEXT_GUESS_SUCCESS,\n        nextGuessSubmitted: submitted\n    }\n};\n\nexport const fetchUserSubmittedNextGuessFail = (error) => {\n    return {\n        type: actionTypes.FETCH_USER_SUBMITTED_NEXT_GUESS_FAIL,\n        error: error\n    }\n};\n\nexport const fetchUserSubmittedNextGuessStart = () => {\n    return {\n        type: actionTypes.FETCH_USER_SUBMITTED_NEXT_GUESS_START\n    }\n};\n\nexport function fetchUserSubmittedNextGuess(userName){\n    return dispatch => {\n        dispatch(fetchUserSubmittedNextGuessStart());\n        //const queryParms = '?auth=' + token;\n        api.hasUserSubmittedNextGuess(userName).then(response => {\n            dispatch(fetchUserSubmittedNextGuessSuccess(response.data.submitted));\n        }).catch(err => {\n            dispatch(fetchUserSubmittedNextGuessFail(err));\n        });\n    };\n};"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import * as actionTypes from '../actions/actionTypes';\nimport { updateObject } from '../utility';\nconst initialState = {\n  results: null,\n  daysWon: null,\n  nextGuessInfo: null,\n  loading: true\n};\n\nconst fetchResultsByDaysWonStart = (state, action) => {\n  return updateObject(state, {\n    loading: true\n  });\n};\n\nconst fetchResultsByDaysWonSuccess = (state, action) => {\n  return updateObject(state, {\n    daysWon: action.daysWon,\n    loading: false\n  });\n};\n\nconst fetchResultsByDaysWonFail = (state, action) => {\n  return updateObject(state, {\n    loading: false\n  });\n};\n\nconst fetchResultsStart = (state, action) => {\n  return updateObject(state, {\n    loading: true\n  });\n};\n\nconst fetchResultsSuccess = (state, action) => {\n  return updateObject(state, {\n    results: action.results,\n    loading: false\n  });\n};\n\nconst fetchResultsFail = (state, action) => {\n  return updateObject(state, {\n    loading: false\n  });\n};\n\nconst fetchUserSubmittedNextGuessStart = (state, action) => {\n  return updateObject(state, {\n    loading: true\n  });\n};\n\nconst fetchUserSubmittedNextGuessSuccess = (state, action) => {\n  return updateObject(state, {\n    nextGuessInfo: action.nextGuessInfo,\n    loading: false\n  });\n};\n\nconst fetchUserSubmittedNextGuessFail = (state, action) => {\n  return updateObject(state, {\n    loading: false\n  });\n};\n\nconst createGuessStart = (state, action) => {\n  return updateObject(state, {\n    loading: true\n  });\n};\n\nconst createGuessSuccess = (state, action) => {\n  return updateObject(state, {\n    nextGuessInfo: action.nextGuessInfo,\n    loading: false\n  });\n};\n\nconst createGuessFail = (state, action) => {\n  return updateObject(state, {\n    loading: false\n  });\n};\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case actionTypes.FETCH_RESULTS_BY_DAYS_WON_START:\n      return fetchResultsByDaysWonStart(state, action);\n\n    case actionTypes.FETCH_RESULTS_BY_DAYS_WON_SUCCESS:\n      return fetchResultsByDaysWonSuccess(state, action);\n\n    case actionTypes.FETCH_RESULTS_BY_DAYS_WON_FAIL:\n      return fetchResultsByDaysWonFail(state, action);\n\n    case actionTypes.FETCH_RESULTS_START:\n      return fetchResultsStart(state, action);\n\n    case actionTypes.FETCH_RESULTS_SUCCESS:\n      return fetchResultsSuccess(state, action);\n\n    case actionTypes.FETCH_RESULTS_FAIL:\n      return fetchResultsFail(state, action);\n\n    case actionTypes.FETCH_USER_SUBMITTED_NEXT_GUESS_START:\n      return fetchUserSubmittedNextGuessStart(state, action);\n\n    case actionTypes.FETCH_USER_SUBMITTED_NEXT_GUESS_SUCCESS:\n      return fetchUserSubmittedNextGuessSuccess(state, action);\n\n    case actionTypes.FETCH_USER_SUBMITTED_NEXT_GUESS_FAIL:\n      return fetchUserSubmittedNextGuessFail(state, action);\n\n    case actionTypes.CREATE_GUESS_START:\n      return createGuessStart(state, action);\n\n    case actionTypes.CREATE_GUESS_SUCCESS:\n      return createGuessSuccess(state, action);\n\n    case actionTypes.CREATE_GUESS_FAIL:\n      return createGuessFail(state, action);\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;","map":{"version":3,"sources":["/Users/rhyswaters/repos/KovidR.UI/src/store/reducers/guess.js"],"names":["actionTypes","updateObject","initialState","results","daysWon","nextGuessInfo","loading","fetchResultsByDaysWonStart","state","action","fetchResultsByDaysWonSuccess","fetchResultsByDaysWonFail","fetchResultsStart","fetchResultsSuccess","fetchResultsFail","fetchUserSubmittedNextGuessStart","fetchUserSubmittedNextGuessSuccess","fetchUserSubmittedNextGuessFail","createGuessStart","createGuessSuccess","createGuessFail","reducer","type","FETCH_RESULTS_BY_DAYS_WON_START","FETCH_RESULTS_BY_DAYS_WON_SUCCESS","FETCH_RESULTS_BY_DAYS_WON_FAIL","FETCH_RESULTS_START","FETCH_RESULTS_SUCCESS","FETCH_RESULTS_FAIL","FETCH_USER_SUBMITTED_NEXT_GUESS_START","FETCH_USER_SUBMITTED_NEXT_GUESS_SUCCESS","FETCH_USER_SUBMITTED_NEXT_GUESS_FAIL","CREATE_GUESS_START","CREATE_GUESS_SUCCESS","CREATE_GUESS_FAIL"],"mappings":"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","sourcesContent":["import * as actionTypes from '../actions/actionTypes';\nimport { updateObject } from '../utility';\n\nconst initialState = {\n    results: null,\n    daysWon: null,\n    nextGuessInfo: null,\n    loading: true\n}\n\nconst fetchResultsByDaysWonStart = ( state, action ) => {\n    return updateObject( state, { loading: true } );\n};\n\nconst fetchResultsByDaysWonSuccess = ( state, action ) => {\n    return updateObject( state, {\n        daysWon: action.daysWon,\n        loading: false\n    } );\n};\n\nconst fetchResultsByDaysWonFail = ( state, action ) => {\n    return updateObject( state, { loading: false } );\n};\n\nconst fetchResultsStart = ( state, action ) => {\n    return updateObject( state, { loading: true } );\n};\n\nconst fetchResultsSuccess = ( state, action ) => {\n    return updateObject( state, {\n        results: action.results,\n        loading: false\n    } );\n};\n\nconst fetchResultsFail = ( state, action ) => {\n    return updateObject( state, { loading: false } );\n};\n\nconst fetchUserSubmittedNextGuessStart = ( state, action ) => {\n    return updateObject( state, { loading: true } );\n};\n\nconst fetchUserSubmittedNextGuessSuccess = ( state, action ) => {\n    return updateObject( state, {\n        nextGuessInfo: action.nextGuessInfo,\n        loading: false\n    } );\n};\n\nconst fetchUserSubmittedNextGuessFail = ( state, action ) => {\n    return updateObject( state, { loading: false } );\n};\n\nconst createGuessStart = ( state, action ) => {\n    return updateObject( state, { loading: true } );\n};\n\nconst createGuessSuccess = ( state, action ) => {\n    return updateObject( state, {\n        nextGuessInfo: action.nextGuessInfo,\n        loading: false\n    } );\n};\n\nconst createGuessFail = ( state, action ) => {\n    return updateObject( state, { loading: false } );\n};\n\nconst reducer = ( state = initialState, action ) => {\n    switch ( action.type ) {\n        case actionTypes.FETCH_RESULTS_BY_DAYS_WON_START: return fetchResultsByDaysWonStart( state, action );\n        case actionTypes.FETCH_RESULTS_BY_DAYS_WON_SUCCESS: return fetchResultsByDaysWonSuccess( state, action );\n        case actionTypes.FETCH_RESULTS_BY_DAYS_WON_FAIL: return fetchResultsByDaysWonFail( state, action )\n        case actionTypes.FETCH_RESULTS_START: return fetchResultsStart( state, action );\n        case actionTypes.FETCH_RESULTS_SUCCESS: return fetchResultsSuccess( state, action );\n        case actionTypes.FETCH_RESULTS_FAIL: return fetchResultsFail( state, action );\n        case actionTypes.FETCH_USER_SUBMITTED_NEXT_GUESS_START: return fetchUserSubmittedNextGuessStart( state, action );\n        case actionTypes.FETCH_USER_SUBMITTED_NEXT_GUESS_SUCCESS: return fetchUserSubmittedNextGuessSuccess( state, action );\n        case actionTypes.FETCH_USER_SUBMITTED_NEXT_GUESS_FAIL: return fetchUserSubmittedNextGuessFail( state, action );\n        case actionTypes.CREATE_GUESS_START: return createGuessStart( state, action );\n        case actionTypes.CREATE_GUESS_SUCCESS: return createGuessSuccess( state, action );\n        case actionTypes.CREATE_GUESS_FAIL: return createGuessFail( state, action );\n        default: return state;\n    }\n};\n\nexport default reducer;"]},"metadata":{},"sourceType":"module"}